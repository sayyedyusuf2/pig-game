{"version":3,"sources":["Players.jsx","Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["Players","active","score","name","winner","current","playerPanel","className","initialState","players","Container","useState","state","setState","dice","setDice","isGameActive","setIsGameAcitve","isInitialMount","useRef","currentScorePlayer1","currentScorePlayer2","nextPlayer","preState","map","player","useEffect","find","index","src","alt","onClick","e","Math","floor","random","handleDice","handleHold","App","style","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68a31197.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Players.css\";\n\nconst Players = ({active, score, name, winner,current }) => {\n  let playerPanel = `player-container`;\n  if(active) playerPanel += ' active';\n  else if(winner)  playerPanel += ' winner';\n  return (\n    <div className={playerPanel}>\n      <div className=\"player-header\">{name}</div>\n      <div className=\"player-score\">{score}</div>\n      <div className=\"player-current-container\">\n        <div className=\"current-score-header\">CURRENT</div>\n        <div className=\"current-score\">{current}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Players;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Players from \"./Players\";\nimport \"./Container.css\";\n\nconst initialState = {\n  players: [\n    {\n      name: \"player 1\",\n      winner: false,\n      score: 0,\n      active: true,\n      current: 0,\n    },\n    {\n      name: \"player 2\",\n      winner: false,\n      active: false,\n      score: 0,\n      current: 0,\n    },\n  ],\n};\n\nconst Container = () => {\n  const [state, setState] = useState(initialState);\n  const [dice, setDice] = useState(0);\n  const [isGameActive, setIsGameAcitve] = useState(true);\n\n  const isInitialMount = useRef(true);\n\n  let currentScorePlayer1 = state.players[0].current;\n  let currentScorePlayer2 = state.players[1].current;\n\n  const nextPlayer = () => {\n    setState((preState) => {\n      return {\n        players: preState.players.map((player) => ({\n          ...player,\n          active: !player.active,\n          score: 0,\n        })),\n      };\n    });\n    setDice(0);\n  };\n\n  useEffect(()=>{\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    }else{\n    let hasWinner = state.players.find((player)=> player.current >= 20);\n        if(hasWinner){\n          const players = state.players.map(player=>{\n            if(player.active){\n              return{\n                ...player,\n                name: \"Winner\",\n                winner: true,\n              }\n            }return player;\n          })\n          setState({players})\n          setIsGameAcitve(false);\n          setDice(0)\n        }else{\n          nextPlayer()\n        }\n      }\n  },[currentScorePlayer2,currentScorePlayer1])\n\n  const handleDice = (e) => {\n    if (isGameActive) {\n      const dice = Math.floor(Math.random() * 6) + 1;\n      if (dice !== 1) { \n        setDice(dice);\n        setState((preState) => {\n          return {\n            players: preState.players.map((player) => {\n              if (player.active) return { ...player, score: player.score + dice };\n              else return {...player}\n            }),\n          };\n        });\n      } else {\n        nextPlayer();\n      }\n    }\n  };\n\n  const handleHold = (e) => {\n    if (isGameActive) {\n      const players = state.players.map((player) => {\n        if (player.active) {\n          return {\n            ...player,\n            current: player.current + player.score,\n          };\n        }\n        return player;\n      });\n      setState({ players });\n    }\n  };\n  const handleNewGame = (e) => {\n    setState(initialState);\n    isInitialMount.current = true;\n    setDice(0);\n    setIsGameAcitve(true)\n  };\n\n  return (\n    <div className=\"container\">\n      {state.players.map((player, index) => {\n        return (\n          <Players\n            key={index}\n            score={player.score}\n            current={player.current}\n            active={player.active}\n            winner={player.winner}\n            name={player.name}\n          />\n        );\n      })}\n      {dice ? (\n        <div className=\"img-container\">\n          <img src={`/images/dice-${dice}.png`} alt=\"dice\" />\n        </div>\n      ) : (\n        \"\"\n      )}\n      <button className=\"btn-roll\" onClick={() => handleDice()}>\n        Roll\n      </button>\n      <button className=\"btn-hold\" onClick={() => handleHold()}>\n        Hold\n      </button>\n      <button className=\"btn-new\" onClick={() => handleNewGame()}>\n        New Game\n      </button>\n    </div>\n  );\n};\n\nexport default Container;\n","import Container from \"./Container\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"background\" style={{background: 'linear-gradient(rgba(62, 20, 20, 0.4), rgba(62, 20, 20, 0.4)),url(/images/back.jpg)'}}>\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}